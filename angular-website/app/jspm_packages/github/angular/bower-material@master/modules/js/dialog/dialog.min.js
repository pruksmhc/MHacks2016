/* */ 
"format cjs";
/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.1-master-24ac328
 */
!function(t,e,n){"use strict";function o(t,n,o){return{restrict:"E",link:function(i,a){a.addClass("_md"),n(a),t(function(){function t(){a.toggleClass("md-content-overflow",r.scrollHeight>r.clientHeight)}var n,r=a[0].querySelector("md-dialog-content");r&&(n=r.getElementsByTagName("img"),t(),e.element(n).on("load",t)),i.$on("$destroy",function(){o.destroy(a)})})}}}function i(t){function o(t,e){return{template:['<md-dialog md-theme="{{ dialog.theme }}" aria-label="{{ dialog.ariaLabel }}" ng-class="dialog.css">','  <md-dialog-content class="md-dialog-content" role="document" tabIndex="-1">','    <h2 class="md-title">{{ dialog.title }}</h2>','    <div ng-if="::dialog.mdHtmlContent" class="md-dialog-content-body" ','        ng-bind-html="::dialog.mdHtmlContent"></div>','    <div ng-if="::!dialog.mdHtmlContent" class="md-dialog-content-body">',"      <p>{{::dialog.mdTextContent}}</p>","    </div>",'    <md-input-container md-no-float ng-if="::dialog.$type == \'prompt\'" class="md-prompt-input-container">','      <input ng-keypress="dialog.keypress($event)" md-autofocus ng-model="dialog.result"              placeholder="{{::dialog.placeholder}}">',"    </md-input-container>","  </md-dialog-content>","  <md-dialog-actions>",'    <md-button ng-if="dialog.$type === \'confirm\' || dialog.$type === \'prompt\'"               ng-click="dialog.abort()" class="md-primary md-cancel-button">',"      {{ dialog.cancel }}","    </md-button>",'    <md-button ng-click="dialog.hide()" class="md-primary md-confirm-button" md-autofocus="dialog.$type===\'alert\'">',"      {{ dialog.ok }}","    </md-button>","  </md-dialog-actions>","</md-dialog>"].join("").replace(/\s\s+/g,""),controller:function(){var n="prompt"==this.$type;n&&this.initialValue&&(this.result=this.initialValue),this.hide=function(){t.hide(!n||this.result)},this.abort=function(){t.cancel()},this.keypress=function(n){n.keyCode===e.KEY_CODE.ENTER&&t.hide(this.result)}},controllerAs:"dialog",bindToController:!0}}function i(t,o,i,l,d,s,c,m,u,g,f){function p(t){b(t)}function h(t,e,n,o){if(o){if(o.mdHtmlContent=o.htmlContent||n.htmlContent||"",o.mdTextContent=o.textContent||n.textContent||o.content||n.content||"",o.mdHtmlContent&&!g.has("$sanitize"))throw Error("The ngSanitize module must be loaded in order to use htmlContent.");if(o.mdHtmlContent&&o.mdTextContent)throw Error("md-dialog cannot have both `htmlContent` and `textContent`")}}function C(t,n,o,a){function r(){n[0].querySelector(".md-actions")&&u.warn("Using a class of md-actions is deprecated, please use <md-dialog-actions>.")}function l(){function t(){var t=n[0].querySelector(".dialog-close");if(!t){var e=n[0].querySelectorAll(".md-actions button, md-dialog-actions button");t=e[e.length-1]}return t}if(o.focusOnOpen){var e=i.findFocusTarget(n)||t()||d;e.focus()}}e.element(s[0].body).addClass("md-dialog-is-showing");var d=n.find("md-dialog");if(d.hasClass("ng-cloak")){var c="$mdDialog: using `<md-dialog ng-cloak >` will affect the dialog opening animations.";u.warn(c,n[0])}return k(o),T(d,o),y(t,n,o),$(n,o),x(n,o).then(function(){E(n,o),r(),l()})}function v(t,n,o){function i(){return w(n,o)}function l(){e.element(s[0].body).removeClass("md-dialog-is-showing"),o.contentElement&&o.reverseContainerStretch(),o.cleanupElement(),o.$destroy||o.origin.focus()}return o.deactivateListeners(),o.unlockScreenReader(),o.hideBackdrop(o.$destroy),a&&a.parentNode&&a.parentNode.removeChild(a),r&&r.parentNode&&r.parentNode.removeChild(r),o.$destroy?l():i().then(l)}function b(t){if(!t.theme&&(t.theme=f.defaultTheme(),t.targetEvent&&t.targetEvent.target)){var n=e.element(t.targetEvent.target);t.theme=(n.controller("mdTheme")||{}).$mdTheme||t.theme}}function k(t){function o(t,o){var i=e.element(t||{});if(i&&i.length){var a={top:0,left:0,height:0,width:0},r=e.isFunction(i[0].getBoundingClientRect);return e.extend(o||{},{element:r?i:n,bounds:r?i[0].getBoundingClientRect():e.extend({},a,i[0]),focus:e.bind(i,i.focus)})}}function i(t,n){return e.isString(t)&&(t=s[0].querySelector(t)),e.element(t||n)}t.origin=e.extend({element:null,bounds:null,focus:e.noop},t.origin||{}),t.parent=i(t.parent,m),t.closeTo=o(i(t.closeTo)),t.openFrom=o(i(t.openFrom)),t.targetEvent&&(t.origin=o(t.targetEvent.target,t.origin))}function $(n,o){var a=e.element(c),r=i.debounce(function(){S(n,o)},60),d=[],s=function(){var e="alert"==o.$type?t.hide:t.cancel;i.nextTick(e,!0)};if(o.escapeToClose){var m=o.parent,u=function(t){t.keyCode===l.KEY_CODE.ESCAPE&&(t.stopPropagation(),t.preventDefault(),s())};n.on("keydown",u),m.on("keydown",u),d.push(function(){n.off("keydown",u),m.off("keydown",u)})}if(a.on("resize",r),d.push(function(){a.off("resize",r)}),o.clickOutsideToClose){var g,f=n,p=function(t){g=t.target},h=function(t){g===f[0]&&t.target===f[0]&&(t.stopPropagation(),t.preventDefault(),s())};f.on("mousedown",p),f.on("mouseup",h),d.push(function(){f.off("mousedown",p),f.off("mouseup",h)})}o.deactivateListeners=function(){d.forEach(function(t){t()}),o.deactivateListeners=null}}function y(t,e,n){n.disableParentScroll&&(n.restoreScroll=i.disableScrollAround(e,n.parent)),n.hasBackdrop&&(n.backdrop=i.createBackdrop(t,"md-dialog-backdrop md-opaque"),d.enter(n.backdrop,n.parent)),n.hideBackdrop=function(t){n.backdrop&&(t?n.backdrop.remove():d.leave(n.backdrop)),n.disableParentScroll&&(n.restoreScroll(),delete n.restoreScroll),n.hideBackdrop=null}}function T(t,e){var n="alert"===e.$type?"alertdialog":"dialog",l=t.find("md-dialog-content"),d=t.attr("id"),s="dialogContent_"+(d||i.nextUid());t.attr({role:n,tabIndex:"-1"}),0===l.length&&(l=t,d&&(s=d)),l.attr("id",s),t.attr("aria-describedby",s),e.ariaLabel?o.expect(t,"aria-label",e.ariaLabel):o.expectAsync(t,"aria-label",function(){var t=l.text().split(/\s+/);return t.length>3&&(t=t.slice(0,3).concat("...")),t.join(" ")}),a=document.createElement("div"),a.classList.add("md-dialog-focus-trap"),a.tabIndex=0,r=a.cloneNode(!1);var c=function(){t.focus()};a.addEventListener("focus",c),r.addEventListener("focus",c),t[0].parentNode.insertBefore(a,t[0]),t.after(r)}function E(t,e){function n(t){for(;t.parentNode;){if(t===document.body)return;for(var e=t.parentNode.children,i=0;i<e.length;i++)t===e[i]||A(e[i],["SCRIPT","STYLE"])||e[i].setAttribute("aria-hidden",o);n(t=t.parentNode)}}var o=!0;n(t[0]),e.unlockScreenReader=function(){o=!1,n(t[0]),e.unlockScreenReader=null}}function S(t,e){var n="fixed"==c.getComputedStyle(s[0].body).position,o=e.backdrop?c.getComputedStyle(e.backdrop[0]):null,i=o?Math.min(s[0].body.clientHeight,Math.ceil(Math.abs(parseInt(o.height,10)))):0,a={top:t.css("top"),height:t.css("height")},r=Math.abs(e.parent[0].getBoundingClientRect().top);return t.css({top:(n?r:0)+"px",height:i?i+"px":"100%"}),function(){t.css(a)}}function x(t,e){e.parent.append(t),e.reverseContainerStretch=S(t,e);var n=t.find("md-dialog"),o=i.dom.animator,a=o.calculateZoomToOrigin,r={transitionInClass:"md-transition-in",transitionOutClass:"md-transition-out"},l=o.toTransformCss(a(n,e.openFrom||e.origin)),d=o.toTransformCss("");return n.toggleClass("md-dialog-fullscreen",!!e.fullscreen),o.translate3d(n,l,d,r).then(function(t){return e.reverseAnimate=function(){return delete e.reverseAnimate,e.closeTo?(r={transitionInClass:"md-transition-out",transitionOutClass:"md-transition-in"},l=d,d=o.toTransformCss(a(n,e.closeTo)),o.translate3d(n,l,d,r)):t(d=o.toTransformCss(a(n,e.origin)))},e.clearAnimate=function(){return delete e.clearAnimate,n.removeClass([r.transitionOutClass,r.transitionInClass].join(" ")),o.translate3d(n,d,o.toTransformCss(""),{})},!0})}function w(t,e){return e.reverseAnimate().then(function(){e.contentElement&&e.clearAnimate()})}function A(t,e){if(e.indexOf(t.nodeName)!==-1)return!0}return{hasBackdrop:!0,isolateScope:!0,onCompiling:p,onShow:C,onShowing:h,onRemove:v,clickOutsideToClose:!1,escapeToClose:!0,targetEvent:null,closeTo:null,openFrom:null,focusOnOpen:!0,disableParentScroll:!0,autoWrap:!0,fullscreen:!1,transformTemplate:function(t,e){function n(t){return e.autoWrap&&!/<\/md-dialog>/g.test(t)?"<md-dialog>"+(t||"")+"</md-dialog>":t||""}return'<div class="md-dialog-container" tabindex="-1">'+n(t)+"</div>"}}}o.$inject=["$mdDialog","$mdConstant"],i.$inject=["$mdDialog","$mdAria","$mdUtil","$mdConstant","$animate","$document","$window","$rootElement","$log","$injector","$mdTheming"];var a,r;return t("$mdDialog").setDefaults({methods:["disableParentScroll","hasBackdrop","clickOutsideToClose","escapeToClose","targetEvent","closeTo","openFrom","parent","fullscreen"],options:i}).addPreset("alert",{methods:["title","htmlContent","textContent","content","ariaLabel","ok","theme","css"],options:o}).addPreset("confirm",{methods:["title","htmlContent","textContent","content","ariaLabel","ok","cancel","theme","css"],options:o}).addPreset("prompt",{methods:["title","htmlContent","textContent","initialValue","content","placeholder","ariaLabel","ok","cancel","theme","css"],options:o})}o.$inject=["$$rAF","$mdTheming","$mdDialog"],i.$inject=["$$interimElementProvider"],e.module("material.components.dialog",["material.core","material.components.backdrop"]).directive("mdDialog",o).provider("$mdDialog",i)}(window,window.angular);